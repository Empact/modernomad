upstream django_app_server {
  server unix:/home/embassynetwork/webapp/run/gunicorn.sock fail_timeout=0;
}

# We need to install the following redirects
# sf.embassynetwork.com -> https://embassynetwork.com/locations/embassysf/
# farmhouse.embassynetwork.com -> https://embassynetwork.com/locations/farmhouse/
# sandbox.embassynetwork.com -> https://embassynetwork.com/locations/sandbox/
# redvic.embassynetwork.com -> https://embassynetwork.com/locations/redvic/
# redvic.com -> https://embassynetwork.com/locations/redvic/

server {
    listen 80;
    server_name  sf.embassynetwork.com;
    rewrite ^ https://embassynetwork.com/embassysf/$request_uri? permanent;
}

server {
    # Catch-all http -> https
    listen 80;
    server_name  *.embassynetwork.com;
    rewrite ^ https://$server_name$request_uri? permanent;
}

server {
    listen 443;
    server_name  *.embassynetwork.com;
    access_log  /home/embassynetwork/logs/nginx_access.log;
    error_log  /home/embassynetwork/logs/nginx_error.log notice;

    location /static/ {
        alias   /home/embassynetwork/webapp/static/;
    }

    location /media/ {
        alias   /home/embassynetwork/webapp/media/;
    }

    ssl on;
    #ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    ssl_certificate     /etc/ssl/certs/embassy-wildcard.crt;
    ssl_certificate_key /etc/ssl/private/embassy-wildcard.key;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    client_max_body_size 4G;
    keepalive_timeout 70;

    location / {
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Protocol https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://django_app_server;
            break;
        }
    }

    # Error pages
    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #    root /home/embassynetwork/static/;
    #}
    #error_page   403  /forbidden.html;
    #location = /forbidden.html {
    #    root   html;
    #}

    # Favicon
    location = /favicon.ico {
        root /home/embassynetwork/static/;
    }
}